# Generated by Django 5.0.1 on 2024-01-09 15:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ShopEzy_App', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrators',
            fields=[
                ('adminid', models.AutoField(db_column='AdminID', primary_key=True, serialize=False)),
                ('aname', models.CharField(blank=True, db_column='AName', max_length=60, null=True)),
                ('aemail', models.CharField(blank=True, db_column='AEmail', max_length=40, null=True, unique=True)),
                ('apassword', models.CharField(blank=True, db_column='APassword', max_length=20, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'administrators',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shoppingcarts',
            fields=[
                ('cartid', models.AutoField(db_column='CartID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'shoppingcarts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('custid', models.AutoField(db_column='CustID', primary_key=True, serialize=False)),
                ('cname', models.CharField(blank=True, db_column='CName', max_length=60, null=True)),
                ('cemail', models.CharField(blank=True, db_column='CEmail', max_length=40, null=True, unique=True)),
                ('cpassword', models.CharField(blank=True, db_column='CPassword', max_length=20, null=True)),
                ('ccountry', models.CharField(blank=True, db_column='CCountry', max_length=20, null=True)),
                ('ccity', models.CharField(blank=True, db_column='CCity', max_length=20, null=True)),
                ('caddress', models.CharField(blank=True, db_column='CAddress', max_length=100, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('prodid', models.AutoField(db_column='ProdID', primary_key=True, serialize=False)),
                ('pname', models.CharField(blank=True, db_column='PName', max_length=60, null=True)),
                ('pprice', models.DecimalField(blank=True, db_column='PPrice', decimal_places=2, max_digits=10, null=True)),
                ('pquantity', models.IntegerField(blank=True, db_column='PQuantity', null=True)),
                ('pspecs', models.TextField(blank=True, db_column='PSpecs', null=True)),
                ('pimage', models.CharField(blank=True, db_column='PImage', max_length=200, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('passcode', models.AutoField(db_column='PassCode', primary_key=True, serialize=False)),
                ('jobtype', models.CharField(blank=True, db_column='JobType', max_length=20, null=True)),
                ('salary', models.DecimalField(blank=True, db_column='Salary', decimal_places=2, max_digits=10, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'job',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('orderquantity', models.IntegerField(blank=True, db_column='OrderQuantity', null=True)),
                ('orderdate', models.DateField(blank=True, db_column='OrderDate', null=True)),
                ('ordertime', models.TimeField(blank=True, db_column='OrderTime', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('vendorid', models.AutoField(db_column='VendorID', primary_key=True, serialize=False)),
                ('vname', models.CharField(blank=True, db_column='VName', max_length=60, null=True)),
                ('vcountry', models.CharField(blank=True, db_column='VCountry', max_length=20, null=True)),
                ('vcity', models.CharField(blank=True, db_column='VCity', max_length=20, null=True)),
                ('vaddress', models.CharField(blank=True, db_column='VAddress', max_length=100, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'vendors',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='test',
            name='myname',
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('adminid', models.OneToOneField(db_column='AdminID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.administrators')),
                ('manager', models.IntegerField(blank=True, db_column='Manager', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'management',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productstock',
            fields=[
                ('adminid', models.OneToOneField(db_column='AdminID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.administrators')),
                ('stockdate', models.DateField(db_column='StockDate')),
                ('stocktime', models.TimeField(blank=True, db_column='StockTime', null=True)),
                ('stockquantity', models.IntegerField(blank=True, db_column='StockQuantity', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'productstock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cartcontainers',
            fields=[
                ('cartid', models.OneToOneField(db_column='CartID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.shoppingcarts')),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'cartcontainers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('custid', models.OneToOneField(db_column='CustID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.customers')),
                ('contactid', models.IntegerField(db_column='ContactID')),
                ('contype', models.CharField(blank=True, db_column='ConType', max_length=10, null=True)),
                ('ccontactnumber', models.IntegerField(blank=True, db_column='CContactNumber', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Custcompany',
            fields=[
                ('custid', models.OneToOneField(db_column='CustID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.customers')),
                ('ntn', models.IntegerField(blank=True, db_column='NTN', null=True)),
                ('creditlimit', models.DecimalField(blank=True, db_column='CreditLimit', decimal_places=2, max_digits=10, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'custcompany',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Custperson',
            fields=[
                ('custid', models.OneToOneField(db_column='CustID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.customers')),
                ('nic', models.IntegerField(blank=True, db_column='NIC', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'custperson',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supervision',
            fields=[
                ('custid', models.OneToOneField(db_column='CustID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.customers')),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'supervision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Electronics',
            fields=[
                ('prodid', models.OneToOneField(db_column='ProdID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.products')),
                ('company', models.CharField(blank=True, db_column='Company', max_length=60, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'electronics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Garments',
            fields=[
                ('prodid', models.OneToOneField(db_column='ProdID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.products')),
                ('brand', models.CharField(blank=True, db_column='Brand', max_length=60, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'garments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groceries',
            fields=[
                ('prodid', models.OneToOneField(db_column='ProdID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.products')),
                ('expirydate', models.DateField(blank=True, db_column='ExpiryDate', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'groceries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productsupply',
            fields=[
                ('vendorid', models.OneToOneField(db_column='VendorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.vendors')),
                ('supplydate', models.DateField(db_column='SupplyDate')),
                ('supplytime', models.TimeField(blank=True, db_column='SupplyTime', null=True)),
                ('supplyquantity', models.IntegerField(blank=True, db_column='SupplyQuantity', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'productsupply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vencompany',
            fields=[
                ('vendorid', models.OneToOneField(db_column='VendorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.vendors')),
                ('ntn', models.IntegerField(blank=True, db_column='NTN', null=True)),
                ('creditlimit', models.DecimalField(blank=True, db_column='CreditLimit', decimal_places=2, max_digits=10, null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'vencompany',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venperson',
            fields=[
                ('vendorid', models.OneToOneField(db_column='VendorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ShopEzy_App.vendors')),
                ('nic', models.IntegerField(blank=True, db_column='NIC', null=True)),
                ('createdat', models.DateTimeField(blank=True, db_column='CreatedAt', null=True)),
                ('updatedat', models.DateTimeField(blank=True, db_column='UpdatedAt', null=True)),
                ('deletedat', models.DateTimeField(blank=True, db_column='DeletedAt', null=True)),
            ],
            options={
                'db_table': 'venperson',
                'managed': False,
            },
        ),
    ]
